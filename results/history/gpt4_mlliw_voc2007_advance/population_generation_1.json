{
     "algorithm": "```",
     "code": "import torch\nfrom torch.autograd import Variable\n\ndef gen_adv_examples(self, org_img, model, target):\n    adv_img = Variable(org_img.data, requires_grad=True)\n    adv_noise = torch.zeros_like(org_img)\n    for _ in range(self.maxiter):\n        grad = self.get_gradient(adv_img, model, target)\n        grad = grad / (torch.norm(grad, p=2) + 1e-8)\n        adv_noise = self.alpha * grad + adv_noise\n        adv_img = adv_img + self.alpha * adv_noise.sign()\n        adv_img = self.clip_adv(org_img, adv_img)\n    return adv_img",
     "objective": 564.94322,
     "other_inf": null
}